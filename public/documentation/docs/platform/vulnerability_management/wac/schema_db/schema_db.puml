@startuml

skinparam linetype ortho

entity DefectDojo {
    host: string
    token: string
    skip_tls: bool
}

class Organization {
    uuid: string
    name: string
    creator_uuid: uuid
    creator_username: string
    created_at: timestamp
    deleted_at: timestamp
}

entity WorkSpace {
    uuid: string
    organization_uuid: Organization
    name: string
    creator_uuid: uuid
    creator_username: string
    created_at: timestamp
    deleted_at: timestamp
}

entity Product {
    uuid: uuid
    name: string
    description: string
    creator_uuid: uuid
    creator_username: string
    created_at: timestamp
    deleted_at: timestamp
}

entity ProductToWorkSpace {
    product_uuid: Product
    workspace_uuid: WorkSpace
}

entity ProductDefectDojo {
    defect_dojo_id: int
    product_uuid: Product
}

entity VCSHosting {
    uuid: uuid
    host: string
    token: string
    type: string
    creator_uuid: uuid
    creator_username: string
    created_at: timestamp
    deleted_at: timestamp
}

entity VCSProject {
    uuid: uuid
    path: string
    ref: string
    languages: []string
    vcs_hosting_uuid: VCSHosting
    creator_uuid: uuid
    creator_username: string
    created_at: timestamp
    deleted_at: timestamp
}

entity VCSEvents {
    uuid: uuid
    iid: int
    type: string
    job_name: string
    host_name: string
    project_id: string
    project_path: string
    hash_commit: string
    ref: string
    date: timestamp
}

entity ProductToVCSProject {
    product_uuid: Product
    vcs_project_uuid: VCSProject
}

entity Server {
    uuid: uuid
    host: string
    creator_uuid: uuid
    creator_username: string
    created_at: timestamp
    product_uuid: Product
    deleted_at: timestamp
}

entity ScanSettings {
    uuid: uuid
    name: string
    core_type: CoreTypeENUM
    data: TEXT
}

entity SecurityPipeline {
    uuid: uuid
    name: string
    disabled: bool
    product_uuid: Product
}

entity SecurityPipelineExecution {
    uuid: uuid
    name: string
    security_pipeline_uuid: SecurityPipeline
    vcs_project_uuid: VCSProject
    vcs_event_uuid: VCSEvents
    started_at: timestamp
    finished_at: timestamp
    status: string
    progress: int
    vuln_low_count: int
    vuln_info_count: int
    vuln_medium_count: int
    vuln_high_count: int
}

entity Trigger {
    uuid: string
    event_type: EventTypeENUM
    security_pipeline_uuid: SecurityPipeline
    param: str
}

entity TriggerToVCSProject {
    trigger_uuid: Trigger
    vcs_project_uuid: VCSProject
}

entity Action {
    uuid: uuid
    security_pipeline_uuid: SecurityPipeline
    step: int
    core_type: string
    tool_type: string
    scan_settings_uuid: ScanSettings
    server_uuid: Optional[Server]
    vcs_publish_comment: bool
}

entity ActionExecution {
    uuid: uuid
    started_at: timestamp
    updated_at: timestamp
    finished_at: timestamp
    security_pipeline_execution: SecurityPipelineExecution
    core_type: string
    tool_type: string
    status: string
    vulns_upload_status: status
    error_reason: string
    error_code: string
    vuln_count: int
    scan_settings: JSON
    server: string
    vcs_publish_comment: bool
}

entity ActionTemplate {
    uuid: uuid
    step: int
    workspace_uuid: WorkSpace
}

class AuthProfile {
    uuid: uuid
    product_uuid: uuid
    name: text
    type: string
    settings: JSONB
    creator_uuid: uuid
    creator_username: string
    created_at: time
    deleted_at: time
}

' links

Organization ||--|{ WorkSpace

Product ||--|{ ProductToWorkSpace
WorkSpace ||--|{ ProductToWorkSpace

Product ||--|{ ProductToVCSProject
VCSProject ||--|{ ProductToVCSProject
VCSProject }|--|| VCSHosting

Action }|--|| ScanSettings

Action }|--|| Server

Product ||--|| ProductDefectDojo

Trigger ||--|{ TriggerToVCSProject
Trigger ||--|| SecurityPipeline
VCSProject ||--|{ TriggerToVCSProject

SecurityPipeline ||--|{ SecurityPipelineExecution
VCSEvents ||--|{ SecurityPipelineExecution
VCSProject ||--|{ SecurityPipelineExecution

SecurityPipeline }|--|| Product

SecurityPipeline ||--|{ Action

ActionTemplate }|--|| WorkSpace

Server }|--|| Product

ActionExecution }|--|| Action

AuthProfile }|--|| Product

@enduml
